nt []   indegree   =   new   int [ numCourses ]; 
            for   ( int []   pre :   prerequisites )   { 
                indegree [ pre [ 0 ]]++; 
            } 
            Queue < Integer >   queue   =   new   LinkedList < Integer >(); 
            for   ( int   i   =   0 ;   i   <   numCourses ;   i ++ )   { 
                if   ( indegree [ i ]   ==   0 )   { 
                    queue . offer ( i ); 
                } 
            } 
            int   count   =   0 ; 
            while   ( ! queue . isEmpty ())   { 
                int   cur   =   queue . poll (); 
                count ++; 
                for   ( int []   pre :   prerequisites )   { 
                    if   ( pre [ 1 ]   ==   cur )   { 
                        indegree [ pre [ 0 ]]--; 
                        if   ( indegree [ pre [ 0 ]]   ==   0 )   { 
                            queue . offer ( pre [ 0 ]); 
                        } 
                    } 
                } 
            } 
            return   count   ==   numCourses ; 
